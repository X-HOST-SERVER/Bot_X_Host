import axios from 'axios';
import cheerio from 'cheerio';

const handler = async (m, { text, command, prefix }) => {
    if (!text) {
        return m.reply(`
๐ **ุฅุฑุดุงุฏุงุช ุงูุงุณุชุฎุฏุงู**:
ูุงุณุชุฎุฏุงู ุงูุฃูุฑุ ูุฑุฌู ูุชุงุจุฉ:

\`${prefix + command} |<ุงููุจูุบ>|<ุงูุนููุฉ_ูู>|<ุงูุนููุฉ_ุฅูู>\`

ูุซุงู:
\`.ุนููู |1000|USD|YER\`

**ุญูุซ**:
- \`1000\` ูู ุงููุจูุบ ุงูุฐู ุชุฑูุฏ ุชุญูููู.
- \`USD\` ูู ุงูุนููุฉ ุงูุชู ุชุฑูุฏ ุงูุชุญููู ูููุง (ูุซู ุงูุฏููุงุฑ ุงูุฃูุฑููู).
- \`YER\` ูู ุงูุนููุฉ ุงูุชู ุชุฑูุฏ ุงูุชุญููู ุฅูููุง (ูุซู ุงูุฑูุงู ุงููููู).

๐ **ุงูุนููุงุช ุงููุนุชุฑู ุจูุง ุฏููููุง**:
- \`ILS\` - ุงูู.ูุงู ุงูุฅุณุฑุงุฆููู (ููุณุทูู๐ต๐ธ)
- \`YER\` - ุงูุฑูุงู ุงููููู (ุงูููู)
- \`MAD\` - ุงูุฏุฑูู ุงููุบุฑุจู (ุงููุบุฑุจ)
- \`USD\` - ุงูุฏููุงุฑ ุงูุฃูุฑููู (ุงูููุงูุงุช ุงููุชุญุฏุฉ)
- \`SAR\` - ุงูุฑูุงู ุงูุณุนูุฏู (ุงูุณุนูุฏูุฉ)
- \`EGP\` - ุงูุฌููู ุงููุตุฑู (ูุตุฑ)
- \`SYP\` - ุงูููุฑุฉ ุงูุณูุฑูุฉ (ุณูุฑูุง)

๐ *ุชุฃูุฏ ูู ูุชุงุจุฉ ุงูุฑููุฒ ุจุดูู ุตุญูุญ.*

๐๐ถ๐น๐ถ ๐ฉ๐ถ๐ป ๐ยน๐
        `);
    }

    if (!text.includes('|') || text.split('|').length !== 4) {
        return m.reply(`๐ **ุงูุฑุฌุงุก ุงุณุชุฎุฏุงู ุงูุตูุบุฉ ุงูุตุญูุญุฉ:**
\`${prefix + command}|<ุงููุจูุบ>|<ุงูุนููุฉ_ูู>|<ุงูุนููุฉ_ุฅูู>\`

ูุซุงู: \`.ุนููู |1000|USD|YER\`
๐`);
    }

    let [commandText, amount, from, to] = text.split('|').map(v => v.trim().toUpperCase());
    amount = parseFloat(amount);

    if (isNaN(amount) || amount <= 0) {
        return m.reply("โ **ุงูุฑุฌุงุก ุฅุฏุฎุงู ูุจูุบ ุตุญูุญ ููุชุญููู.**");
    }

    async function convertCurrency(from, to) {
        const url = `https://www.xe.com/currencyconverter/convert/?Amount=1&From=${from}&To=${to}`;
        try {
            const { data } = await axios.get(url);
            const $ = cheerio.load(data);
            const conversionText = $('div[data-testid="conversion"]').find('p.hVDvqw').text().trim();
            const numberMatch = conversionText.match(/([\d,\.]+)/);

            if (numberMatch) {
                return parseFloat(numberMatch[0].replace(/,/g, ''));
            } else {
                throw new Error('ูู ูุชู ุงูุนุซูุฑ ุนูู ุจูุงูุงุช ุงูุชุญููู');
            }
        } catch (error) {
            console.error('Error:', error);
            throw error;
        }
    }

    // ุงุณุชุฎุฏู ุงูููุซูุฏ ุงูููุงุณุจุฉ ูุฅุฑุณุงู ุงูุฑุณุงุฆู ุจูุงุกู ุนูู ุงูููุชุจุฉ ุงูุชู ุชุณุชุฎุฏููุง
    await m.reply('โณ');

    try {
        let rate = await convertCurrency(from, to);
        const convertedAmount = (amount * rate).toFixed(2); // ุชู ุงูุชุนุฏูู ููุง ุนูู ุงูุนูููุฉ ูู ูุณูุฉ ุฅูู ุถุฑุจ

        m.reply(`๐ฑ *ุชุญููู ุงูุนููุฉ*\n\n๐ *ูุจูุบ ุงูุชุญููู*: ${amount} ${from} = ${convertedAmount} ${to}\n๐ *ุงููุตุฏุฑ:* xe.com`);

        await m.reply('โ');

    } catch (err) {
        console.error(err);
        m.reply("โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุฌูุจ ุจูุงูุงุช ุงูุชุญููู.");
    }
};

handler.help = ["ุนููู"];
handler.tags = ["ุงุฏูุงุช"];
handler.command = /^(ุนููู)$/i;
handler.register = true;

export default handler;